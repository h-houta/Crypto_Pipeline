[tool.poetry]
name = "crypto-pipeline"
version = "1.0.0"
description = "Real-time cryptocurrency data pipeline"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{ include = "producer" }, { include = "consumer" }, { include = "alerting" }]

[tool.poetry.dependencies]
python = "^3.11"

# Core runtime
confluent-kafka = "2.3.0"
psycopg2-binary = "2.9.9"
sqlalchemy = "2.0.25"
httpx = "0.26.0"
aiohttp = "3.9.1"
requests = "2.31.0"
pydantic = "2.5.3"
pydantic-settings = "2.1.0"
python-dotenv = "1.0.0"
click = "8.1.7"
structlog = "24.1.0"
prometheus-client = "0.19.0"
colorama = "0.4.6"

# Data processing (used by consumer)
pandas = "2.1.4"
numpy = "1.26.3"
pyarrow = "14.0.2"

# Optional async DB client (present in repo requirements)
asyncpg = "0.29.0"

# DBT kept optional but available from root for convenience
dbt-core = { version = "1.7.4", optional = true }
dbt-postgres = { version = "1.7.4", optional = true }
protobuf = "4.25.3"

# Note: pytest-dbt-adapter is excluded to prevent dbt.main import conflicts
# If you need it, install manually with: pip install pytest-dbt-adapter

[tool.poetry.extras]
dbt = ["dbt-core", "dbt-postgres"]

[tool.poetry.group.dev.dependencies]
pytest = "7.4.4"
pytest-asyncio = "0.23.3"
pytest-mock = "3.12.0"
pytest-cov = "4.1.0"
black = "23.12.1"
flake8 = "7.0.0"
mypy = "1.8.0"
isort = "5.13.2"
pre-commit = "3.6.0"
ipython = "8.19.0"
pylint = "3.3.8"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true

[tool.pylint.master]
jobs = 0
init-hook = "import sys; sys.path.append('.')"

[tool.pylint.messages_control]
disable = ["C0111", "C0103", "R0903", "W0621", "W0611"]

[tool.pylint.reports]
output-format = "text"
msg-template = "{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}"

[tool.pylint.format]
max-line-length = 120
max-module-lines = 1000

[tool.pylint.basic]
good-names = ["i", "j", "k", "ex", "Run", "_", "id", "db"]


